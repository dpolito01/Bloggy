@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> userManager

@model Bloggy.Web.Models.ViewModel.BogDetailsViewModels

@{
    if (Model != null)
    {
    ViewData["Title"] = Model.PageTitle;    
    }
}


<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-6">
            @if(Model != null)
            {
                <h1 class="mb-3">@Model.Heading</h1>
                <div class="d-flex justify-content-between mb-3">
                    <span class="text-secondary">@Model.Author</span>
                    <span class="text-secondary">@Model.PublishedDate.ToShortDateString()</span>
                </div>

                <div class="mb-3">
                    @if (signInManager.IsSignedIn(User))
                    {
                        if(Model.Liked)
                        { //No id to avoid event listener
                            <a id="" style="cursor: pointer;"><i class="bi bi-hand-thumbs-up-fill"></i></a>
                        }
                        else
                        {                    
                        <a id="btnLike" style="cursor: pointer;"><i class="bi bi-hand-thumbs-up"></i></a>
                        }
                    }
                    <span id="totalLikes">@Model.totalLikes</span> Likes
                </div>

                <div class="mb-3 d-flex">
                    @foreach (var tags in Model.Tags)
                    {
                        <span class="badge bg-secondary me-1">
                            @tags.Name
                        </span>
                    }
                </div>

                <img src="@Model.FeaturedImageUrl" class="d-block img-fluid mb-3" />
                <div class="mb-3 blog-details-content">
                    @Html.Raw(Model.Content)
                </div>
            }
            else
            {
                <p>Blog post not found!</p>
            }
        </div>
    </div>
</div>


@section Scripts{
    <script>
        const btnLikeElement = document.getElementById('btnLike');
        const totalLikesElement = document.getElementById('totalLikes');

        async function getTotalLikes(){
            fetch('/api/blogpostlike/@Model.Id/totalLikes', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
                },
            })
            .then(data => data.json())
            .then(result => totalLikesElement.innerHTML = result)
        }


        async function addLikeforBlog() {
            fetch('/api/BlogPostLike/Add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept':'*/*'
                },
                body: JSON.stringify({
                    blogPostId: '@Model.Id',
                    userId: '@userManager.GetUserId(User)'
                })
            }).then(() => {
                btnLikeElement.innerHTML = '<i class="bi bi-hand-thumbs-up-fill"></i>';
                btnLikeElement.removeEventListener('click', addLikeforBlog);
                getTotalLikes();
            });
        }

        btnLikeElement.addEventListener('click', addLikeforBlog);

    </script>
}